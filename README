#########################################################################
Instructions to run the calibration. See below for instructions in how
to use the result
#########################################################################

1) Git clone the repository into your home directory

$ cd
$ git clone git://github.com/usc-clmc/usc-arm-calibration.git

2) Add the following lines to your .bashrc

source /opt/ros/fuerte/setup.bash
export ROSCONSOLE_CONFIG_FILE=~/usc-arm-calibration/rosconsole
export ROS_PACKAGE_PATH=~/usc-arm-calibration:${ROS_PACKAGE_PATH}

3) source the new .bashrc

$ source ~/.bashrc

4) install required debian packages

$ rosdep init
$ rosdep update
$ rosdep install usc_fiducial_calibration
$ apt-get install octave

5) set some symlinks to point at the correct calibration files

$ rosrun arm_scripts cal-set agt
roscd: No such package/stack 'arm_learn_hand_eye_calibration/data'
roscd: No such package/stack 'arm_sl_user/armUser/config'

(ignore these error messages)

6) make the ROS independent lib

$ cd ~/usc-arm-calibration/arm_gp_lib
$ cmake .
$ make

7) make the rest

$ rosmake --pre-clean usc_fiducial_calibration

8) start a roscore is a separate terminal

$ roscore

9) (cross fingers) and run the calibration code

$ roslaunch usc_fiducial_calibration fiducial_calibration.launch

9) check the progress in rviz (optional) (copy rviz files first)

$ copy ~/usc-arm-calibration/config/dot_rviz ~/.rviz
$ rosrun rviz rviz

#########################################################################
Instructions in howto use the result
#########################################################################

There is a ROS independent lib in usc-arm-calibration/arm_gp_lib that
reads the generated parameters and can be used to get head offset 
corrections. Please see

usc-arm-calibration/arm_fiducial_cal/src/head_corrector.cpp

for a simple example.