/* Auto-generated by genmsg_cpp for file /home/jbinney/ws/arm/stacks/usc-arm-calibration/arm_msgs/srv/GetTableCoeffs.srv */
#ifndef ARM_MSGS_SERVICE_GETTABLECOEFFS_H
#define ARM_MSGS_SERVICE_GETTABLECOEFFS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace arm_msgs
{
template <class ContainerAllocator>
struct GetTableCoeffsRequest_ {
  typedef GetTableCoeffsRequest_<ContainerAllocator> Type;

  GetTableCoeffsRequest_()
  {
  }

  GetTableCoeffsRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetTableCoeffsRequest
typedef  ::arm_msgs::GetTableCoeffsRequest_<std::allocator<void> > GetTableCoeffsRequest;

typedef boost::shared_ptr< ::arm_msgs::GetTableCoeffsRequest> GetTableCoeffsRequestPtr;
typedef boost::shared_ptr< ::arm_msgs::GetTableCoeffsRequest const> GetTableCoeffsRequestConstPtr;


template <class ContainerAllocator>
struct GetTableCoeffsResponse_ {
  typedef GetTableCoeffsResponse_<ContainerAllocator> Type;

  GetTableCoeffsResponse_()
  : found(false)
  , a(0.0)
  , b(0.0)
  , c(0.0)
  , d(0.0)
  {
  }

  GetTableCoeffsResponse_(const ContainerAllocator& _alloc)
  : found(false)
  , a(0.0)
  , b(0.0)
  , c(0.0)
  , d(0.0)
  {
  }

  typedef uint8_t _found_type;
  uint8_t found;

  typedef double _a_type;
  double a;

  typedef double _b_type;
  double b;

  typedef double _c_type;
  double c;

  typedef double _d_type;
  double d;


  typedef boost::shared_ptr< ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GetTableCoeffsResponse
typedef  ::arm_msgs::GetTableCoeffsResponse_<std::allocator<void> > GetTableCoeffsResponse;

typedef boost::shared_ptr< ::arm_msgs::GetTableCoeffsResponse> GetTableCoeffsResponsePtr;
typedef boost::shared_ptr< ::arm_msgs::GetTableCoeffsResponse const> GetTableCoeffsResponseConstPtr;

struct GetTableCoeffs
{

typedef GetTableCoeffsRequest Request;
typedef GetTableCoeffsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GetTableCoeffs
} // namespace arm_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "arm_msgs/GetTableCoeffsRequest";
  }

  static const char* value(const  ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "852ddcb53d360da100517ad6fa9d857e";
  }

  static const char* value(const  ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x852ddcb53d360da1ULL;
  static const uint64_t static_value2 = 0x00517ad6fa9d857eULL;
};

template<class ContainerAllocator>
struct DataType< ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "arm_msgs/GetTableCoeffsResponse";
  }

  static const char* value(const  ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool found\n\
float64 a\n\
float64 b\n\
float64 c\n\
float64 d\n\
\n\
\n\
";
  }

  static const char* value(const  ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetTableCoeffsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.found);
    stream.next(m.a);
    stream.next(m.b);
    stream.next(m.c);
    stream.next(m.d);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetTableCoeffsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<arm_msgs::GetTableCoeffs> {
  static const char* value() 
  {
    return "852ddcb53d360da100517ad6fa9d857e";
  }

  static const char* value(const arm_msgs::GetTableCoeffs&) { return value(); } 
};

template<>
struct DataType<arm_msgs::GetTableCoeffs> {
  static const char* value() 
  {
    return "arm_msgs/GetTableCoeffs";
  }

  static const char* value(const arm_msgs::GetTableCoeffs&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "852ddcb53d360da100517ad6fa9d857e";
  }

  static const char* value(const arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "arm_msgs/GetTableCoeffs";
  }

  static const char* value(const arm_msgs::GetTableCoeffsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "852ddcb53d360da100517ad6fa9d857e";
  }

  static const char* value(const arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "arm_msgs/GetTableCoeffs";
  }

  static const char* value(const arm_msgs::GetTableCoeffsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ARM_MSGS_SERVICE_GETTABLECOEFFS_H

